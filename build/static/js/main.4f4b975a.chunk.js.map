{"version":3,"sources":["queries/getOverview.js","queries/getSchool.js","queries/getSearch.js","queries/getPartner.js","components/constants/molecules/Card.jsx","components/constants/molecules/Search.jsx","components/constants/molecules/KeyInput.jsx","components/constants/molecules/KeyValue.jsx","components/containers/Overview.jsx","components/constants/organisms/CardList.jsx","components/containers/School.jsx","components/containers/Partner.jsx","components/containers/Text.jsx","components/containers/Map.jsx","components/containers/Entity.jsx","components/containers/SelectEntity.jsx","Routes.jsx","App.jsx","index.js"],"names":["gql","_templateObject","getSchool_templateObject","getSearch_templateObject","getPartner_templateObject","Article","styled","article","Card_templateObject","Title","h2","_templateObject2","Li","li","_templateObject3","Card","_ref","title","list","to","react_default","a","createElement","Link","map","item","index","key","generateList","updateSearch","Search_templateObject","Input","input","Search_templateObject2","timeout","Search","_useQuery","useQuery","getSearch","suspend","data","error","loading","concat","message","_useState","useState","_useState2","Object","slicedToArray","value","setValue","useEffect","search","changeGlobalSearch","useMutation","placeholder","onChange","event","target","clearTimeout","setTimeout","variables","changeSearch","Form","form","KeyInput_templateObject","Label","label","KeyInput_templateObject2","LabelText","p","KeyInput_templateObject3","_templateObject4","save","type","entity","entityId","updateEntityAction","refetchQueries","keyValue","id","KeyInput","_ref2","name","labelName","inputValue","setInputValue","_templateObject5","htmlFor","originalValue","KeyInput_Input","onBlur","defaultChecked","newValue","generateInput","Wrapper","div","KeyValue_templateObject","KeyValue_templateObject2","Value","KeyValue_templateObject3","KeyValue","KeyValue_Label","Main","main","Overview_templateObject","LinkWrapper","Overview_templateObject2","StyledLink","Overview_templateObject3","Overview","path","match","query","getOverview","limit","console","log","molecules_Search","Route","render","Text","containers_Map","Section","section","CardList_templateObject","ChildWrapper","CardList_templateObject2","h1","CardList_templateObject3","Subtitle","h3","CardList_templateObject4","Button","button","CardList_templateObject5","_templateObject6","withRouter","subtitle","children","history","createEntity","_templateObject7","CardList_Title","CardList_Form","onSubmit","preventDefault","method","then","create_entity","push","url","generateEntityForm","School_templateObject","InputGroup","School_templateObject2","School_templateObject3","School_templateObject4","_ref2$match","params","getSchool","Number","refetch","_data$school","school","count_of_students","school_level","school_type","bring_your_own_device","installed_base","city","postal_code","street","street_number","longitude","latitude","partners","genericKeyInputProps","recalculateLocation","School_templateObject5","School_Main","School_Section","assign","School_Button","CardList","length","education_focused","generatePartners","SelectEntity","alreadySelectedEntities","parentId","parentRoute","exact","Partner_templateObject","Partner_templateObject2","Partner_templateObject3","getPartner","_data$partner","partner","schools","Partner_Main","Partner_Section","Partner_InputGroup","select","website","generateSchools","shouldGenerateList","element","_ref4","schoolGroups","_query$data","school_groups","_ref3","StyledMap","Map","Map_templateObject","Map_templateObject2","Map_templateObject3","generateMarkers","opacity","address","Marker","position","riseOnHover","Popup","Map_Title","Map_Subtitle","heart","leaflet","icon","iconUrl","iconSize","hpLogo","home","center","zoom","TileLayer","attribution","Entity","School","Partner","getPartners","SelectEntity_templateObject","Dialogue","SelectEntity_templateObject2","Background","SelectEntity_templateObject3","ListItem","SelectEntity_templateObject4","SelectEntity_templateObject5","linkEntity","SelectEntity_templateObject6","react","entities","checked","isChecked","forEach","defineChecked","base_entity_id","base_entity_name","link_entity_id","link_entity_name","remove","SelectEntity_Label","generateEntities","Routes","Switch","Redirect","component","client","ApolloClient","uri","clientState","defaults","resolvers","Mutation","_","cache","writeData","typeDefs","ReactDOM","BrowserRouter","es","document","getElementById"],"mappings":"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","file":"static/js/main.4f4b975a.chunk.js","sourcesContent":["import gql from 'graphql-tag';\n\nexport default gql`\n  query getOverview($search: String!, $limit: Int!) {\n    schools(range:{ limit: $limit, offset: 0 }, search: $search) {\n      id\n      name\n      city\n      address\n      postal_code\n      street\n      street_number\n      count_of_students\n      school_level\n      school_type\n      installed_base\n      bring_your_own_device\n      website\n      latitude\n      longitude\n    }\n    school_groups(range:{ limit: $limit, offset: 0 }, search: $search) {\n      id\n      name\n      city\n      address\n      street\n      street_number\n      postal_code\n      count_of_students\n      latitude\n      longitude\n    }\n    partners(range:{ limit: $limit, offset: 0 }, search: $search) {\n      id\n      name\n      education_focused\n    }\n  }\n`;\n","import gql from 'graphql-tag';\n\nexport default gql`\n  query getSchool($id: Int!){\n    school(id: $id){\n      name\n      address\n      city\n      postal_code\n      street\n      street_number\n      count_of_students\n      school_level\n      school_type\n      installed_base\n      bring_your_own_device\n      website\n      longitude\n      latitude\n      school_group {\n        id\n        name\n        city\n        address\n        street\n        street_number\n        postal_code\n        count_of_students\n      }\n      partners {\n        id\n        name\n        education_focused\n      }\n      sell_out {\n        units\n        fiscal_year\n        hp_quarter\n      }\n    }\n  }\n`;\n","import gql from 'graphql-tag';\n\nexport default gql`\n  query {\n    search @client\n  }\n`;\n","import gql from 'graphql-tag';\n\nexport default gql`\n  query getPartner($id: Int!){\n    partner(id: $id){\n      name\n      education_focused\n      schools {\n        id\n        name\n        city\n        address\n        postal_code\n        street\n        street_number\n        count_of_students\n        school_level\n        school_type\n        installed_base\n        bring_your_own_device\n        website\n        latitude\n        longitude\n      }\n    }\n  }\n`;\n","import React from 'react';\nimport styled from 'styled-components';\nimport { Link } from 'react-router-dom';\n\n\nconst Article = styled.article`\n  background-color: white;\n  width: 100%;\n  max-width: 300px;\n  height: 150px;\n  padding: 10px;\n  box-sizing: border-box;\n  box-shadow: 0 1px 3px rgba(0,0,0,0.12), 0 1px 2px rgba(0,0,0,0.24);\n  margin-right: 10px;\n`;\n\nconst Title = styled.h2`\n  font-weight: bold;\n  margin-bottom: 2px;\n`;\n\nconst Li = styled.li`\n  opacity: .7;\n  margin: 5px 0px;\n`;\n\nfunction generateList(list) {\n  return list.map((item, index) => (\n    // eslint-disable-next-line react/no-array-index-key\n    <Li key={index}>{ item }</Li>\n  ));\n}\n\nexport default ({ title, list, to }) => (\n  <Article>\n    <Link to={to}><Title>{title}</Title></Link>\n    <ul>\n      {generateList(list)}\n    </ul>\n  </Article>\n);\n","import React, { useState, useEffect } from 'react';\nimport styled from 'styled-components';\nimport gql from 'graphql-tag';\nimport { useQuery, useMutation } from 'react-apollo-hooks';\nimport { getSearch } from '../../../queries';\n\nconst updateSearch = gql`\n  mutation updateSearch($search: String) {\n    updateSearch(search: $search) @client\n  }\n`;\n\n\nconst Input = styled.input`\n  padding: 5px;\n  font-size: 16pt;\n  width: calc(100% - 30px);\n  max-width: 600px;\n  border: none;\n  box-shadow: 0 1px 3px rgba(0,0,0,0.12), 0 1px 2px rgba(0,0,0,0.24);\n`;\n\nlet timeout = 0;\n\nconst changeSearch = ({ target: { value } }, changeGlobalSearch, setValue) => {\n  setValue(value);\n  if (timeout) clearTimeout(timeout);\n  timeout = setTimeout(() => {\n    changeGlobalSearch({\n      variables: {\n        search: value,\n      },\n    });\n  }, 700);\n};\n\nconst Search = () => {\n  const { data, error, loading } = useQuery(getSearch, { suspend: false });\n  if (loading) return <div>Loading...</div>;\n  if (error) return `Error! ${error.message}`;\n  const [value, setValue] = useState('');\n  useEffect(() => {\n    const { search } = data;\n    setValue(search);\n  }, []);\n  const changeGlobalSearch = useMutation(updateSearch);\n\n\n  return (\n    <Input\n      value={value}\n      placeholder=\"Search\"\n      onChange={event => changeSearch(event, changeGlobalSearch, setValue)}\n    />\n  );\n};\n\nexport default Search;\n","import React, { useState } from 'react';\nimport styled from 'styled-components';\nimport { useMutation } from 'react-apollo-hooks';\nimport gql from 'graphql-tag';\n\n\nconst Form = styled.form`\n`;\n\nconst Label = styled.label`\n  width: 100%;\n  display: flex;\n  align-items: center;\n  padding-bottom: 10px;\n`;\n\nconst LabelText = styled.p`\n  width: 40%;\n  font-size: 14pt;\n  max-width: 200px;\n`;\n\nconst Input = styled.input`\n  width: 60%;\n  padding: 5px;\n  padding-right: 0px;\n  box-sizing: border-box;\n`;\n\nfunction save(value, key, type, entity, entityId, updateEntityAction, refetchQueries) {\n  updateEntityAction({\n    variables: {\n      keyValue: {\n        value,\n        key,\n        type,\n      },\n      entity,\n      id: entityId,\n    },\n    refetchQueries,\n  });\n}\n\nfunction generateInput(\n  type,\n  inputValue,\n  setInputValue,\n  name,\n  originalValue,\n  entity,\n  entityId,\n  updateEntityAction,\n  refetchQueries,\n) {\n  if (type === 'number' || type === 'text') {\n    return (\n      <Input\n        placeholder={type}\n        value={inputValue}\n        type={type}\n        onChange={event => setInputValue(event.target.value)}\n        onBlur={({ target: { value } }) => {\n          if (value !== originalValue) {\n            save(value, name, type, entity, entityId, updateEntityAction, refetchQueries);\n          }\n        }}\n      />\n    );\n  }\n  if (type === 'boolean') {\n    return (\n      <input\n        type=\"checkbox\"\n        defaultChecked={inputValue}\n        onChange={() => {\n          const newValue = !inputValue;\n          setInputValue(newValue);\n          save(newValue, name, type, entity, entityId, updateEntityAction, refetchQueries);\n        }}\n      />\n    );\n  }\n  return null;\n}\n\nexport default ({\n  type,\n  name,\n  labelName,\n  value,\n  entity,\n  entityId,\n  refetchQueries,\n}) => {\n  const [inputValue, setInputValue] = useState(value);\n  const updateEntityAction = useMutation(\n    gql`\n      mutation update_entity($keyValue: keyValue, $entity: String, $id: Int){\n        update_entity(keyValue: $keyValue, entity: $entity, id: $id) {\n          name\n        }\n      }\n    `,\n  );\n  return (\n    <Form>\n      <Label id={name} htmlFor={name}>\n        <LabelText>{labelName}</LabelText>\n        {generateInput(\n          type,\n          inputValue,\n          setInputValue,\n          name,\n          value,\n          entity,\n          entityId,\n          updateEntityAction,\n          refetchQueries,\n        )}\n      </Label>\n    </Form>\n  );\n};\n","import React from 'react';\nimport styled from 'styled-components';\n\nconst Wrapper = styled.div`\n  width: 100%;\n  display: flex;\n  align-items: center;\n  padding-bottom: 10px;\n`;\n\nconst Label = styled.p`\n  width: 40%;\n  font-size: 14pt;\n  max-width: 200px;\n`;\n\nconst Value = styled.p`\n  width: 60%;\n  padding: 5px;\n  padding-right: 0px;\n  box-sizing: border-box;\n`;\n\n\nexport default ({ label, value}) => {\n  return (\n    <Wrapper>\n      <Label>{label}</Label>\n      <Value>{value}</Value>\n    </Wrapper>\n  );\n}\n","import React from 'react';\nimport styled from 'styled-components';\nimport { useQuery } from 'react-apollo-hooks';\nimport { Link, Route } from 'react-router-dom';\nimport { getOverview, getSearch } from '../../queries';\nimport { Search } from '../constants/molecules';\nimport { Text, Map } from '.';\n\nconst Main = styled.main`\n  margin: 20px 0px 0px 20px;\n`;\n\nconst LinkWrapper = styled.div`\n  margin-top: 10px;\n`;\n\nconst StyledLink = styled(Link)`\n  margin-right: 20px;\n`;\n\nexport default ({ match: { path } }) => {\n  const { data: { search } } = useQuery(getSearch, { suspend: false });\n  const query = useQuery(getOverview, { variables: { search, limit: 300 }, suspend: false });\n  console.log(path);\n  return (\n    <Main>\n      <Search />\n      <LinkWrapper>\n        <StyledLink to={`${path}/text`}>Text</StyledLink>\n        <StyledLink to={`${path}/map`}>Map</StyledLink>\n      </LinkWrapper>\n      <Route path={`${path}/text`} render={() => <Text query={query} />} />\n      <Route path={`${path}/map`} render={() => <Map query={query} />} />\n    </Main>\n  );\n};\n","import React from 'react';\nimport styled from 'styled-components';\nimport { withRouter } from 'react-router-dom';\nimport { useMutation } from 'react-apollo-hooks';\nimport gql from 'graphql-tag';\n\n\nconst Section = styled.section`\n  margin-top: 20px;\n`;\n\nconst ChildWrapper = styled.div`\n  display: float;\n  overflow: auto;\n  padding-bottom: 2px;\n`;\n\nconst Title = styled.h1`\n  font-size: 20pt;\n  font-weight: bold;\n  margin-bottom: 2px;\n`;\n\nconst Subtitle = styled.h3`\n  font-size: 14pt;\n  margin-bottom: 10px;\n`;\n\nconst Button = styled.button`\n  padding: 0;\n  background-color: transparent;\n  border: none;\n  margin-left: 10px;\n  font-size: 28pt;\n`;\n\nconst Form = styled.form`\n  display: inline;\n`;\n\nfunction generateEntityForm(entity, createEntity, history, match) {\n  if (entity) {\n    return (\n      <Form\n        onSubmit={(event) => {\n          event.preventDefault();\n          if (entity.method === 'add') {\n            createEntity({\n              variables: {\n                entity: entity.name,\n              },\n            }).then(({ data: { create_entity: { id } } }) => {\n              history.push(`/${entity.name}/${id}`);\n            });\n          }\n          if (entity.method === 'select') {\n            history.push(`${match.url}/select/${entity.name}`);\n          }\n        }}\n      >\n        <Button>+</Button>\n      </Form>\n    );\n  }\n  return null;\n}\n\nexport default withRouter(({ title, subtitle, children, entity, history, match }) => {\n  const createEntity = useMutation(\n    gql`\n      mutation create_entity($entity: String){\n        create_entity(entity: $entity) {\n          id\n        }\n      }\n    `,\n  );\n  return (\n    <Section>\n      <Title>\n        {title}\n        {generateEntityForm(entity, createEntity, history, match)}\n      </Title>\n      <Subtitle>{subtitle}</Subtitle>\n      <ChildWrapper>\n        {children}\n      </ChildWrapper>\n    </Section>\n  );\n});\n","import React from 'react';\nimport { withRouter, Route } from 'react-router-dom';\nimport styled from 'styled-components';\nimport { useQuery, useMutation } from 'react-apollo-hooks';\nimport gql from 'graphql-tag';\n\nimport { getSchool, getSearch, getOverview } from '../../queries';\nimport { KeyInput, KeyValue, Card } from '../constants/molecules';\nimport { CardList } from '../constants/organisms';\nimport { SelectEntity } from '.';\n\nconst Section = styled.section`\n  width: 100%;\n  background-color: white;\n  box-sizing: border-box;\n  display: flex;\n  @media (max-width: 1100px) {\n    display: block;\n  }\n`;\n\nconst InputGroup = styled.div`\n  width: calc(50% - 50px);\n  padding: 20px;\n  margin-right: 50px;\n  @media (max-width: 1100px) {\n    width: 100%;\n  }\n`;\n\nconst Main = styled.main`\n  margin: 20px;\n`;\n\nconst Button = styled.button`\n  background-color: #0095D9;\n  padding: 10px;\n  color: white;\n  border: none;\n  border-radius: 5px;\n`;\n\nconst generatePartners = partners => (\n  partners.map(({\n    name,\n    id,\n    education_focused,\n  }) => (\n      <Card\n        key={name}\n        title={name}\n        to={`/partner/${id}`}\n        list={[\n          `Education focused: ${education_focused}`,\n        ]}\n      />\n    ))\n);\n\n\nexport default withRouter(({\n  match: {\n    params: { id },\n    url,\n  },\n}) => {\n  const {\n    data,\n    error,\n    loading,\n    refetch,\n  } = useQuery(getSchool, { variables: { id: Number(id) }, suspend: false });\n  const { data: { search } } = useQuery(getSearch, { suspend: false });\n  if (loading) return null;\n  if (error) return `Error! ${error.message}`;\n  const {\n    school: {\n      name,\n      count_of_students,\n      school_level,\n      school_type,\n      bring_your_own_device,\n      installed_base,\n      city,\n      postal_code,\n      street,\n      street_number,\n      longitude,\n      latitude,\n      partners,\n    },\n  } = data;\n  const refetchQueries = [\n    {\n      query: getSchool,\n      variables: {\n        id: Number(id),\n      },\n    },\n    {\n      query: getOverview,\n      variables: {\n        search,\n        limit: 300,\n      },\n    },\n  ];\n  \n  const genericKeyInputProps = {\n    entity: 'school',\n    entityId: id,\n    refetchQueries,\n  };\n\n  const recalculateLocation = useMutation(\n    gql`\n      mutation recalculate_location($city: String, $street: String, $street_number: String, $postal_code: Int, $id: Int) {\n        recalculate_location(city:$city, street:$street, street_number:$street_number, postal_code:$postal_code, id: $id) {\n          name\n        }\n      }\n    `,\n    {\n      variables: {\n        city,\n        postal_code,\n        street,\n        street_number,\n        id,\n      },\n      refetchQueries,\n    },\n  );\n\n  return (\n    <Main>\n      <Section>\n        <InputGroup>\n          <KeyInput type=\"text\" value={name} name=\"name\" labelName=\"Name of school\" {...genericKeyInputProps} />\n          <KeyInput type=\"text\" value={city} name=\"city\" labelName=\"City\" {...genericKeyInputProps} />\n          <KeyInput type=\"number\" value={postal_code} name=\"postal_code\" labelName=\"Postal code\" {...genericKeyInputProps} />\n          <KeyInput type=\"text\" value={street} name=\"street\" labelName=\"Street\" {...genericKeyInputProps} />\n          <KeyInput type=\"number\" value={street_number} name=\"street_number\" labelName=\"Street number\" {...genericKeyInputProps} />\n          <KeyValue label=\"Longitude\" value={longitude} />\n          <KeyValue label=\"Latitude\" value={latitude} />\n          <form\n            onSubmit={\n              (event) => {\n                event.preventDefault();\n                recalculateLocation();\n              }\n            }\n          >\n            <Button type=\"submit\">Recalculate location</Button>\n          </form>\n        </InputGroup>\n        <InputGroup>\n          <KeyInput type=\"number\" value={count_of_students} name=\"count_of_students\" labelName=\"Count of students\" {...genericKeyInputProps} />\n          <KeyInput type=\"text\" value={school_level} name=\"school_level\" labelName=\"School level\" {...genericKeyInputProps} />\n          <KeyInput type=\"text\" value={school_type} name=\"school_type\" labelName=\"School type\" {...genericKeyInputProps} />\n          <KeyInput type=\"text\" value={installed_base} name=\"installed_base\" labelName=\"Installed base\" {...genericKeyInputProps} />\n          <KeyInput type=\"boolean\" value={bring_your_own_device} name=\"bring_your_own_device\" labelName=\"BYOD\" {...genericKeyInputProps} />\n        </InputGroup>\n      </Section>\n      <CardList entity={{ name: 'partner', method: 'select' }} title=\"Partners\" subtitle={`${partners.length} results`}>\n        {generatePartners(partners)}\n      </CardList>\n      {/*<SelectEntity refetchQueries={refetchQueries} alreadySelectedEntities={partners} parentId={id} parentRoute={url} />*/}\n      <Route path=\"/:entity/:id/select/partner\" render={() => <SelectEntity refetchQueries={refetchQueries} alreadySelectedEntities={partners} parentId={id} parentRoute={url} />} exact />\n    </Main>\n  );\n});\n","import React from 'react';\nimport { withRouter } from 'react-router-dom';\nimport styled from 'styled-components';\nimport { useQuery } from 'react-apollo-hooks';\n\nimport { getPartner, getSearch, getOverview } from '../../queries';\nimport { KeyInput, Card } from '../constants/molecules';\nimport { CardList } from '../constants/organisms';\n\nconst Section = styled.section`\n  width: 100%;\n  background-color: white;\n  box-sizing: border-box;\n  display: flex;\n  @media (max-width: 1100px) {\n    display: block;\n  }\n`;\n\nconst InputGroup = styled.div`\n  width: calc(50% - 50px);\n  padding: 20px;\n  margin-right: 50px;\n  @media (max-width: 1100px) {\n    width: 100%;\n  }\n`;\n\nconst Main = styled.main`\n  margin: 20px;\n`;\n\nconst generateSchools = schools => (\n  schools.map(({\n    name,\n    id,\n    city,\n    postal_code,\n    street,\n    street_number,\n    installed_base,\n    website,\n    bring_your_own_device,\n  }) => (\n    <Card\n      key={name}\n      title={name}\n      to={`/school/${id}`}\n      list={[\n        `${city} ${postal_code}`,\n        `${street} ${street_number}`,\n        installed_base,\n        website,\n        `BYOD: ${bring_your_own_device}`,\n      ]}\n    />\n  ))\n);\n\n\nexport default withRouter(({ match: { params: { id } } }) => {\n  const {\n    data,\n    error,\n    loading,\n  } = useQuery(getPartner, { variables: { id: Number(id) }, suspend: false });\n  const { data: { search } } = useQuery(getSearch, { suspend: false });\n  if (loading) return null;\n  if (error) return `Error! ${error.message}`;\n  const {\n    partner: {\n      name,\n      education_focused,\n      schools,\n    },\n  } = data;\n  const refetchQueries = [\n    {\n      query: getPartner,\n      variables: {\n        id: Number(id),\n      },\n    },\n    {\n      query: getOverview,\n      variables: {\n        search,\n        limit: 300,\n      },\n    },\n  ];\n\n  const genericKeyInputProps = {\n    entity: 'partner',\n    entityId: id,\n    refetchQueries,\n  };\n\n  return (\n    <Main>\n      <Section>\n        <InputGroup>\n          <KeyInput type=\"text\" value={name} name=\"name\" labelName=\"Name of partner\" {...genericKeyInputProps} />\n        </InputGroup>\n        <InputGroup>\n          <KeyInput type=\"boolean\" value={education_focused} name=\"education_focused\" labelName=\"Education focused\" {...genericKeyInputProps} />\n        </InputGroup>\n      </Section>\n      <CardList select={`/select/school/partner/${id}`} title=\"Schools\" subtitle={`${schools.length} results`}>\n        {generateSchools(schools)}\n      </CardList>\n    </Main>\n  );\n});\n","import React from 'react';\nimport { Card } from '../constants/molecules';\nimport { CardList } from '../constants/organisms';\n\nconst generateSchools = schools => (\n  schools.map(({\n    name,\n    id,\n    city,\n    postal_code,\n    street,\n    street_number,\n    installed_base,\n    website,\n    bring_your_own_device,\n  }) => (\n    <Card\n      key={name}\n      title={name}\n      to={`/school/${id}`}\n      list={[\n        `${city} ${postal_code}`,\n        `${street} ${street_number}`,\n        installed_base,\n        website,\n        `BYOD: ${bring_your_own_device}`,\n      ]}\n    />\n  ))\n);\n\nconst generateSchoolGroups = schoolGroups => (\n  schoolGroups.map(({\n    name,\n    id,\n    city,\n    street,\n    street_number,\n    postal_code,\n    count_of_students,\n  }) => (\n    <Card\n      key={name}\n      title={name}\n      to={`/school-group/${id}`}\n      list={[\n        `${city} ${postal_code}`,\n        `${street} ${street_number}`,\n        `Students: ${count_of_students}`,\n      ]}\n    />\n  ))\n);\n\nconst generatePartners = partners => (\n  partners.map(({\n    name,\n    id,\n    education_focused,\n  }) => (\n    <Card\n      key={name}\n      title={name}\n      to={`/partner/${id}`}\n      list={[\n        `Education focused: ${education_focused}`,\n      ]}\n    />\n  ))\n);\n\nconst shouldGenerateList = (list, element) => {\n  if (list.length > 0) {\n    return element;\n  }\n  return null;\n};\n\nexport default ({ query }) => {\n  const {\n    data: { schools, school_groups, partners },\n    error,\n    loading,\n  } = query;\n  if (loading) return null;\n  if (error) return `Error! ${error.message}`;\n  return [\n    shouldGenerateList(\n      schools,\n      <CardList entity={{ name: 'school', method: 'add' }} title=\"Schools\" subtitle={`${schools.length} results`}>\n        {generateSchools(schools)}\n      </CardList>,\n    ),\n    shouldGenerateList(\n      school_groups,\n      <CardList entity={{ name: 'school_group', method: 'add' }} title=\"School groups\" subtitle={`${school_groups.length} results`}>\n        {generateSchoolGroups(school_groups)}\n      </CardList>,\n    ),\n    shouldGenerateList(\n      partners,\n      <CardList entity={{ name: 'partner', method: 'add' }} title=\"Partners\" subtitle={`${partners.length} results`}>\n        {generatePartners(partners)}\n      </CardList>,\n    ),\n  ];\n};\n","import React from 'react';\nimport {\n  Map,\n  Marker,\n  Popup,\n  TileLayer,\n} from 'react-leaflet';\nimport styled from 'styled-components';\nimport leaflet from 'leaflet';\n\nconst StyledMap = styled(Map)`\n  height: calc(100vh - 100px);\n  margin-top: 10px;\n`;\n\nconst Title = styled.h2`\n  font-weight: bold;\n  font-size: 12pt;\n`;\nconst Subtitle = styled.p`\n  margin: 0px !important;\n`;\n\nconst generateMarkers = (data, opacity) => (\n  data.map(({\n    name,\n    latitude,\n    longitude,\n    address,\n  }) => {\n    if (latitude && longitude) {\n      return (\n        <Marker\n          position={[latitude, longitude]}\n          title={name}\n          opacity={opacity}\n          riseOnHover\n        >\n          <Popup>\n            <Title>{name}</Title>\n            <Subtitle>{address}</Subtitle>\n          </Popup>\n        </Marker>\n      );\n    }\n    return null;\n  })\n);\n\nconst heart = leaflet.icon({\n  iconUrl: 'http://localhost:3000/images/heart.png',\n  iconSize: [20, 18],\n});\n\nconst hpLogo = leaflet.icon({\n  iconUrl: 'http://localhost:3000/images/hp.png',\n  iconSize: [20, 18],\n});\n\nexport default ({ query }) => {\n  const {\n    data: { schools, school_groups },\n    error,\n    loading,\n  } = query;\n  if (loading) return null;\n  if (error) return `Error! ${error.message}`;\n  const home = [50.853660, 4.370850];\n  return (\n    <StyledMap center={home} zoom={9}>\n      <TileLayer\n        url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n        attribution=\"&copy; <a href=&quot;http://osm.org/copyright&quot;>OpenStreetMap</a> contributors\"\n      />\n      <Marker icon={heart} position={home}>\n        <Popup><Title>Home sweet home</Title></Popup>\n      </Marker>\n      <Marker icon={hpLogo} position={[50.879850, 4.436110]}>\n        <Popup><Title>HP Belgium</Title></Popup>\n      </Marker>\n      {generateMarkers(schools, 1)}\n      {generateMarkers(school_groups, 0.5)}\n    </StyledMap>\n  );\n};\n","import React from 'react';\nimport { School, Partner } from '.';\n\nexport default ({ match: { params: { entity } } }) => {\n  switch (entity) {\n    case 'school':\n      return <School />;\n\n    case 'partner':\n      return <Partner />;\n\n    default:\n      return <p>Not found</p>;\n  }\n};\n","import React, { Fragment } from 'react';\nimport { Link } from 'react-router-dom';\nimport styled from 'styled-components';\nimport gql from 'graphql-tag';\nimport { useQuery, useMutation } from 'react-apollo-hooks';\n\n\nconst getPartners = gql`\n  query getPartners($search: String!) {\n    partners(search: $search, range:{ limit: 100, offset: 0 }) {\n      id\n      name\n      education_focused\n    }\n  }\n`;\n\nconst Dialogue = styled.div`\n  position: fixed;\n  background-color: white;\n  top: 0;\n  bottom: 0;\n  left: 0;\n  right: 0;\n  margin: auto;\n  max-width: 600px;\n  max-height: 800px;\n  overflow: auto;\n  padding: 15px;\n`;\n\nconst Background = styled(Link)`\n  position: fixed;\n  background-color: black;\n  top: 0;\n  bottom: 0;\n  left: 0;\n  right: 0;\n  margin: auto;\n  opacity: .5;\n`;\n\nconst ListItem = styled.li`\n  margin-bottom: 10px;\n`;\n\nconst Label = styled.label`\n  margin-left: 10px;\n`;\n\nfunction defineChecked(id, alreadySelectedEntities) {\n  let isChecked = false;\n  alreadySelectedEntities.forEach((entity) => {\n    if (id === entity.id) isChecked = true;\n  });\n  return isChecked;\n}\n\nfunction generateEntities(parentId, entities, alreadySelectedEntities, linkEntity, refetchQueries) {\n\n  return entities.map(({ name, id }) => {\n    const checked = defineChecked(id, alreadySelectedEntities);\n    return (\n      <ListItem>\n        <input\n          onChange={() => {\n            linkEntity({\n              variables: {\n                base_entity_id: parentId,\n                base_entity_name: 'school',\n                link_entity_id: id,\n                link_entity_name: 'partner',\n                remove: checked,\n              },\n              refetchQueries,\n            });\n          }}\n          checked={checked}\n          id={name}\n          type=\"checkbox\"\n        />\n        <Label htmlFor={name}>{name}</Label>\n      </ListItem>\n    );\n  });\n}\n\nexport default ({ parentRoute, alreadySelectedEntities, parentId, refetchQueries }) => {\n  const {\n    data,\n    error,\n    loading,\n  } = useQuery(getPartners, { variables: { search: '' }, suspend: false });\n  if (loading) return null;\n  if (error) return `Error! ${error.message}`;\n  const linkEntity = useMutation(\n    gql`\n      mutation link_entity($base_entity_id: Int, $base_entity_name: String, $link_entity_id: Int, $link_entity_name: String, $remove: Boolean){\n        link_entity(base_entity_id: $base_entity_id, base_entity_name: $base_entity_name, link_entity_id: $link_entity_id, link_entity_name: $link_entity_name, remove: $remove) {\n          name\n        }\n      }\n    `,\n  );\n  console.log(alreadySelectedEntities);\n  return (\n    <Fragment>\n      <Background to={parentRoute} />\n      <Dialogue>\n        <ul>\n          {\n            generateEntities(parentId, data.partners, alreadySelectedEntities, linkEntity, refetchQueries)\n          }\n        </ul>\n      </Dialogue>\n    </Fragment>\n  );\n};\n","import React from 'react';\nimport { Route, Switch, Redirect } from 'react-router-dom';\nimport { Overview, Entity } from './components/containers';\n\n\nexport default () => (\n  <Switch>\n    <Route exact path=\"/\" render={() => <Redirect to=\"/overview/text\" />} />\n    <Route path=\"/overview\" component={Overview} />\n    <Route path=\"/:entity/:id\" component={Entity} />\n  </Switch>\n);\n","import React from 'react';\nimport { ApolloProvider } from 'react-apollo-hooks';\nimport ApolloClient from 'apollo-boost';\n\nimport './css/reset.css';\n\nimport Routes from './Routes';\n\nconst typeDefs = `\n  type Query {\n    search: String!\n  }\n`;\n\nconst client = new ApolloClient({\n  uri: 'https://hp-education-server.herokuapp.com/graphql',\n  clientState: {\n    defaults: {\n      search: '',\n    },\n    resolvers: {\n      Mutation: {\n        updateSearch: (_, { search }, { cache }) => {\n          cache.writeData({ data: { search } });\n          return null;\n        },\n      },\n    },\n    typeDefs,\n  },\n});\n\nexport default () => (\n  <ApolloProvider client={client}>\n    <Routes />\n  </ApolloProvider>\n);\n","/* eslint-disable react/jsx-filename-extension */\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport App from './App';\n\nReactDOM.render(\n  <BrowserRouter><App /></BrowserRouter>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}